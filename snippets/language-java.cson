'.source.java, .source.groovy':
  'abstract':
    'prefix': 'ab'
    'body': 'abstract '
  'case':
    'prefix': 'cs'
    'body': 'case $1:\n\t$2\n$0'
  'catch':
    'prefix': 'ca'
    'body': 'catch (${1:Exception} ${2:e}) {\n\t$0\n}'
  'class':
    'prefix': 'cl'
    'body': 'class ${1:MyClass} ${2:extends ${3:Parent} }${4:implements ${5:Interface} }{\n\t$6\n}'
  'else if':
    'prefix': 'elif'
    'body': 'else if ($1) {\n\t$0\n}'
  'do while':
    'prefix': 'dow'
    'body': 'do {\n\t$1\n} while ($2);$0'
  'else':
    'prefix': 'el'
    'body': 'else {\n\t$0\n}'
  'final':
    'prefix': 'fi'
    'body': 'final '
  'finally':
    'prefix': 'fy'
    'body': 'finally {\n\t$0\n}'
  'for':
    'prefix': 'for'
    'body': 'for ($1; $2; $3) {\n\t$0\n}'
  'if':
    'prefix': 'if'
    'body': 'if ($1) {\n\t$0\n}'
  'import':
    'prefix': 'im'
    'body': 'import '
  'interface':
    'prefix': 'in'
    'body': 'interface ${1:MyInterface} ${2:extends ${3:Parent} }{\n\t$0\n}'
  'private':
    'prefix': 'pr'
    'body': 'private '
  'protected':
    'prefix': 'po'
    'body': 'protected '
  'public':
    'prefix': 'pu'
    'body': 'public '
  'return':
    'prefix': 're'
    'body': 'return '
  'serialVersionUID':
    'prefix': 'se'
    'body': 'private static final long serialVersionUID = ${1:42}l;$0'
  'static':
    'prefix': 'st'
    'body': 'static '
  'switch':
    'prefix': 'sw'
    'body': 'switch ($1) {\n\t$0\n}'
  'synchronized':
    'prefix': 'sy'
    'body': 'synchronized '
  'throw new':
    'prefix': 'tn'
    'body': 'throw new $0'
  'throw':
    'prefix': 'th'
    'body': 'throw $0'
  'try':
    'prefix': 'tr'
    'body': 'try {\n\t$0\n}'
  'try-catch':
    'prefix':'trc'
    'body': 'try {\n\t$1\n} catch(${2:Exception} ${3:e}) {\n\t$4\n}'
  'variable':
    'prefix': 'v'
    'body': '${1:String} ${2:var}${3: = ${0:null}};'
'.source.java':
  'break':
    'prefix': 'br'
    'body': 'break;\n'
  'constant string':
    'prefix': 'cos'
    'body': 'public static final String ${1:var} = "$2";$0'
  'constant':
    'prefix': 'co'
    'body': 'public static final ${1:String} ${2:var} = $3;$0'
  'default':
    'prefix': 'de'
    'body': 'default:\n\t$0'
  'for (each)':
    'prefix': 'fore'
    'body': 'for ($1 : $2) {\n\t$0\n}'
  'import junit.framework.TestCase;':
    'prefix': 'imt'
    'body': 'import junit.framework.TestCase;\n$0'
  'java.beans.':
    'prefix': 'j.b'
    'body': 'java.beans.'
  'java.io.':
    'prefix': 'j.i'
    'body': 'java.io.'
  'java.math.':
    'prefix': 'j.m'
    'body': 'java.math.'
  'java.net.':
    'prefix': 'j.n'
    'body': 'java.net.'
  'java.util.':
    'prefix': 'j.u'
    'body': 'java.util.'
  'method (main)':
    'prefix': 'main'
    'body': 'public static void main(String[] args) {\n\t$0\n}'
  'method':
    'prefix': 'm'
    'body': '${1:void} ${2:method}($3) ${4:throws $5 }{\n\t$0\n}\n'
  'print':
    'prefix': 'p'
    'body': 'System.out.print($1);$0'
  'println':
    'prefix': 'pl'
    'body': 'System.out.println($1);$0'
  'test case':
    'prefix': 'tc'
    'body': 'public class ${1:MyTest} extends ${2:TestCase} {\n\t$0\n}'
  'test':
    'prefix': 't'
    'body': 'public void test${1:Name}() throws Exception {\n\t$0\n}'
  'while':
    'prefix': 'wh'
    'body': 'while ($1) {\n\t$0\n}'
'.text.html.jsp':
  'el':
    'prefix': '$'
    'body': '\\${$1}'
  'scriptlet':
    'prefix': '%'
    'body': """
    <%
    \t$1
    %>
    """
  'declaration':
    'prefix': '%!'
    'body': """
    <%!
    \t$1
    %>
    """
  'expression':
    'prefix': '%='
    'body': """
    <%=
    \t$1
    %>
    """
  'comment':
    'prefix': '%--'
    'body': """
    <%--
    \t$1
    --%>
    """
  'declaration (xml)':
    'prefix': 'declaration'
    'body': """
    <jsp:declaration>
    \t$1
    </jsp:declaration>
    """
  'expression (xml)':
    'prefix': 'expression'
    'body': """
    <jsp:expression>
    \t$1
    </jsp:expression>
    """
  'scriptlet (xml)':
    'prefix': 'scriptlet'
    'body': """
    <jsp:scriptlet>
    \t$1
    </jsp:scriptlet>
    """
  'c:out':
    'prefix': 'out'
    'body': """
    <c:out value="\\${$1}"/>
    """
  'c:set':
    'prefix': 'set'
    'body': """
    <c:set var="${1:name}" value="\\${$2}"/>
    """
  'c:remove':
    'prefix': 'rm'
    'body': """
    <c:remove var="${1:name}"/>
    """
  'c:catch':
    'prefix': 'catch'
    'body': """
    <c:catch var="${1:ex}">
    \t$2
    </c:catch>
    """
  'c:if':
    'prefix': 'if'
    'body': """
    <c:if test="\\${${1:true}}">
    \t$0
    </c:if>
    """
  'c:choose':
    'prefix': 'choose'
    'body': """
    <c:choose>
    \t<c:when test="\\${${1:true}}">
    \t\t$2
    \t</c:when>$3
    \t<c:otherwise>
    \t\t$4
    \t</c:otherwise>
    </c:choose>
    """
  'c:when':
    'prefix': 'when'
    'body': """
    <c:when test="\\${${1:true}}">
    \t$2
    </c:when>
    """
  'c:otherwise':
    'prefix': 'other'
    'body': """
    <c:otherwise>
    \t$1
    </c:otherwise>
    """
  'c:forEach':
    'prefix': 'forEach'
    'body': """
    <c:forEach var="${1:i}" begin="$2" end="$3">
    \t$4
    </c:forEach>
    """
  'c:forEach':
    'prefix': 'forEachIn'
    'body': """
    <c:forEach var="${1:item}" items="$2">
    \t$3
    </c:forEach>
    """
  'c:forTokens':
    'prefix': 'forTokens'
    'body': """
    <c:forTokens var="${1:item}" items="$2" delims="${3:,}">
    \t$4
    </c:forTokens>
    """
'.text.html.jsp .entity.name.tag':
  'declaration (xml)':
    'prefix': '<jsp:declaration'
    'body': """
    <jsp:declaration>
    \t$1
    </jsp:declaration>
    """
  'expression (xml)':
    'prefix': '<jsp:expression'
    'body': """
    <jsp:expression>
    \t$1
    </jsp:expression>
    """
  'scriptlet (xml)':
    'prefix': '<jsp:scriptlet'
    'body': """
    <jsp:scriptlet>
    \t$1
    </jsp:scriptlet>
    """
  'c:out':
    'prefix': '<c:out'
    'body': """
    <c:out value="\\${$1}"/>
    """
  'c:set':
    'prefix': '<c:set'
    'body': """
    <c:set var="${1:name}" value="\\${$2}"/>
    """
  'c:remove':
    'prefix': '<c:rm'
    'body': """
    <c:remove var="${1:name}"/>
    """
  'c:catch':
    'prefix': '<c:catch'
    'body': """
    <c:catch var="${1:ex}">
    \t$2
    </c:catch>
    """
  'c:if':
    'prefix': '<c:if'
    'body': """
    <c:if test="\\${${1:true}}">
    \t$0
    </c:if>
    """
  'c:choose':
    'prefix': '<c:choose'
    'body': """
    <c:choose>
    \t<c:when test="\\${${1:true}}">
    \t\t$2
    \t</c:when>$3
    \t<c:otherwise>
    \t\t$4
    \t</c:otherwise>
    </c:choose>
    """
  'c:when':
    'prefix': '<c:when'
    'body': """
    <c:when test="\\${${1:true}}">
    \t$2
    </c:when>
    """
  'c:otherwise':
    'prefix': '<c:other'
    'body': """
    <c:otherwise>
    \t$1
    </c:otherwise>
    """
  'c:forEach':
    'prefix': '<c:forEach'
    'body': """
    <c:forEach var="${1:i}" begin="$2" end="$3">
    \t$4
    </c:forEach>
    """
  'c:forEach':
    'prefix': '<c:forEachIn'
    'body': """
    <c:forEach var="${1:item}" items="$2">
    \t$3
    </c:forEach>
    """
  'c:forTokens':
    'prefix': '<c:forTokens'
    'body': """
    <c:forTokens var="${1:item}" items="$2" delims="${3:,}">
    \t$4
    </c:forTokens>
    """
'.text.html.jsp .punctuation.begin':
  'scriptlet':
    'prefix': '<%'
    'body': """
    <%
    \t$1
    %>
    """
  'declaration':
    'prefix': '<%!'
    'body': """
    <%!
    \t$1
    %>
    """
  'expression':
    'prefix': '<%='
    'body': """
    <%=
    \t$1
    %>
    """
'.text.html.jsp .punctuation.comment':
  'comment':
    'prefix': '<%--'
    'body': """
    <%--
    \t$1
    --%>
    """
